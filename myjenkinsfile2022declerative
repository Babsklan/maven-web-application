pipeline{

//agent any

agent{
label "nodes"
}
parameters {
  choice choices: ['development', 'master', 'qa'], description: 'Select Branch Name', name: 'BranchName'
}

tools{
maven "maven3.8.5"

}
triggers {
  pollSCM ('* * * * *')
 //cron ('* * * * *')
}

options {
  timestamps()
 buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}




stages{

   //Get the code from GitHub
   stage('CheckoutCode'){
   steps{
       slacknotifications("STARTED")
   git branch: "${params.BranchName}", credentialsId: 'b794f090-8c41-43b1-9f7d-d9ce9a4bf77b', url:'https://github.com/Babsklan/maven-web-application.git'
   }
   }
 
   //Do the Build Stage 
   stage('Build'){
   steps{
   sh "mvn clean package"
   }
   }
//Execute SonarQube Report
 stage('ExecuteSonarQubeReport'){
 steps{
 sh "mvn sonar:sonar"
 }
 }

    
   //Upload Artifacts into Nexus repo
 stage('UploadArtifactsintoNexus'){
 steps{
 sh "mvn deploy"
 }
 }

//Deploy Application into Tomcat Server
 stage('DeployAppIntoTomcatServer'){
  steps{
 sshagent(['6df1f396-e13c-4889-b3dc-a0f62d3f26d1']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.90.78:/opt/apache-tomcat-9.0.64/webapps/"
 }
 }
 }


}//Stages closing

post {
  success {
   slacknotifications(currentBuild.result)
  }
  failure {
    slacknotifications(currentBuild.result)
  }
}


}//Pipeline closing


def slacknotifications(String buildStatus = 'STARTED') {
 
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)               
}

